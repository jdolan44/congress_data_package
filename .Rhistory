#find the RMSE
congress_data_preds %>%
rmse(truth = numSpon, estimate = .pred)
source("~/GitHub/congress_data_package/models.R")
#find the RMSE
congress_data_preds %>%
rmse(truth = numSpon, estimate = .pred)
source("~/GitHub/congress_data_package/models.R")
#find the RMSE
congress_data_preds %>%
rmse(truth = numSpon, estimate = .pred)
source("~/GitHub/congress_data_package/models.R")
View(gam_fit)
rm(gam_fit)
#get fit for # of bills sponsored
numspon_fit <- gam_spec %>%
fit(numSpon ~ s(numberTerms, age, k=10),data=congress_data_train)
rm(congress_data_preds)
source("~/GitHub/congress_data_package/models.R")
#find the RMSE
numspon_preds %>%
rmse(truth = numSpon, estimate = .pred)
source("~/GitHub/congress_data_package/models.R")
#find the RMSE
passprcnt_preds %>%
rmse(truth = passPrcnt, estimate = .pred)
#compare predictions to actual
numspon_preds %>%
select(passPrcnt, .pred)
?sapply
congress_data() %>%
select(age, gender)
library(tidyverse)
library(tidymodels)
congress_data() %>%
select(age, gender)
congress_data %>%
select(age, gender)
congress_data %>%
select(party, gender)
congress_data %>%
select(party, gender) %>%
unclass()
congress_data %>%
select(gender) %>%
unclass()
congress_data %>%
select(gender) %>%
factor() %>%
unclass()
congress_data %>%
select(gender) %>%
factor() %>%
unclass()
congress_data%>% select(party)
source("~/GitHub/congress_data_package/models.R")
source("~/GitHub/congress_data_package/models.R")
source("~/GitHub/congress_data_package/models.R")
#find the RMSE
numspon_preds %>%
rmse(truth = numSpon, estimate = .pred)
source("~/GitHub/congress_data_package/models.R")
#get fit for pass percent
passprcnt_fit <- gam_spec %>%
fit(passPrcnt ~ s(numberTerms, age, gender_binary, party_binary, k=3),data=congress_data_train)
#get fit for pass percent
passprcnt_fit <- gam_spec %>%
fit(passPrcnt ~ s(numberTerms, age, gender_binary, party_binary, k=20),data=congress_data_train)
#get fit for # of bills sponsored
numspon_fit <- gam_spec %>%
fit(numSpon ~ s(numberTerms, age, gender_binary, party_binary, k=20),data=congress_data_train)
#predict using the model
numspon_preds <- numspon_fit %>%
predict(congress_data_test) %>%
cbind(congress_data_test)
#find the RMSE
numspon_preds %>%
rmse(truth = numSpon, estimate = .pred)
#get fit for pass percent
passprcnt_fit <- gam_spec %>%
fit(passPrcnt ~ s(numberTerms, age, gender_binary, party_binary, k=20),data=congress_data_train)
#predict using the model
passprcnt_preds <- passprcnt_fit %>%
predict(congress_data_test) %>%
cbind(congress_data_test)
#glimpse the prediction cols
glimpse(passprcnt_preds)
#find the RMSE
passprcnt_preds %>%
rmse(truth = passPrcnt, estimate = .pred)
#find the RMSE
numspon_preds %>%
rmse(truth = numSpon, estimate = .pred)
#compare predictions to actual
numspon_preds %>%
select(numSpon, .pred)
#find the RMSE
passprcnt_preds %>%
rmse(truth = passPrcnt, estimate = .pred)
#compare predictions to actual
numspon_preds %>%
select(passPrcnt, .pred)
#find the RMSE
numspon_preds %>%
rmse(truth = numSpon, estimate = .pred)
#compare predictions to actual
numspon_preds %>%
select(numSpon, .pred)
#find the RMSE
numspon_preds %>%
rmse(truth = numSpon, estimate = .pred)
#compare predictions to actual
numspon_preds %>%
select(numSpon, .pred) %>%
glimpse()
#| echo: false
#find the RMSE
numspon_preds %>%
rmse(truth = numSpon, estimate = .pred)
#compare predictions to actual
numspon_preds %>%
select(numSpon, .pred) %>%
glimpse()
```
#| echo: false
#find the RMSE
numspon_preds %>%
rmse(truth = numSpon, estimate = .pred)
#compare predictions to actual
numspon_preds %>%
select(numSpon, .pred) %>%
glimpse()
```
#| echo: false
#find the RMSE
numspon_preds %>%
rmse(truth = numSpon, estimate = .pred)
#compare predictions to actual
numspon_preds %>%
select(numSpon, .pred) %>%
glimpse()
```
#| echo: false
#find the RMSE
passprcnt_preds %>%
rmse(truth = passPrcnt, estimate = .pred)
#compare predictions to actual
passprcnt_preds %>%
select(passPrcnt, .pred) %>%
glimpse()
#get fit for # of bills sponsored
numspon_fit <- gam_spec %>%
fit(numSpon ~ s(numberTerms) + s(age) + gender_binary + party_binary, data=congress_data_train)
source("~/GitHub/congress_data_package/R/models.R")
#glimpse the prediction cols
glimpse(passprcnt_preds)
#find the RMSE
passprcnt_preds %>%
rmse(truth = passPrcnt, estimate = .pred)
#compare predictions to actual
numspon_preds %>%
select(passPrcnt, .pred)
#compare predictions to actual
numspon_preds %>%
select(numSpon, .pred)
#find the RMSE
passprcnt_preds %>%
rmse(truth = passPrcnt, estimate = .pred)
#find the RMSE
numspon_preds %>%
rmse(truth = numSpon, estimate = .pred)
source("~/GitHub/congress_data_package/R/models.R")
#find the RMSE
passprcnt_preds %>%
rmse(truth = passPrcnt, estimate = .pred)
#find the RMSE
numspon_preds %>%
rmse(truth = numSpon, estimate = .pred)
#| echo: false
#find the RMSE
numspon_preds %>%
rmse(truth = numSpon, estimate = .pred)
#compare predictions to actual
numspon_preds %>%
select(numSpon, .pred) %>%
glimpse()
#| echo: false
#find the RMSE
passprcnt_preds %>%
rmse(truth = passPrcnt, estimate = .pred)
#compare predictions to actual
passprcnt_preds %>%
select(passPrcnt, .pred) %>%
glimpse()
#| echo: false
#find the RMSE
passprcnt_preds %>%
rmse(truth = passPrcnt, estimate = .pred)
library(tidyverse)
library(ggplot2)
library(ISLR2)
library(rsample)
library(ggplot2)
library(ISLR2)
library(rsample)
#model formula
numSpon_lm <-
lm(numSpon ~ numberTerms + age + gender + party, data = congress_data)
numSpon_lm
numSpon_intervals <-
reg_intervals(numSpon ~ numberTerms + age + gender + party, data = congress_data, times = 500)
numSpon_intervals
numSpon_intervals
numSpon_intervals %>%
ggplot(aes(.estimate, term)) +
geom_vline(xintercept = 0, size = 1.5, lty = 2, color = "gray50") +
geom_errorbar(size = 1.4, alpha = 0.7,
aes(xmin = .lower, xmax = .upper)) +
geom_point(size = 3)
# clean up data for ANOVA
congress_data_for_anova <-congress_data %>%
filter(party!="Independent")
#model formula
numSpon_lm <-
lm(numSpon ~ numberTerms + age + gender + party, data = congress_data_for_anova)
numSpon_lm
#get intervals
numSpon_intervals <-
reg_intervals(numSpon ~ numberTerms + age + gender + party, data = congress_data_for_anova, times = 500)
numSpon_intervals
#plot estimates
numSpon_intervals %>%
ggplot(aes(.estimate, term)) +
geom_vline(xintercept = 0, size = 1.5, lty = 2, color = "gray50") +
geom_errorbar(size = 1.4, alpha = 0.7,
aes(xmin = .lower, xmax = .upper)) +
geom_point(size = 3)
#model formula
passPrcnt_lm <-
lm(passPrcnt ~ numberTerms + age + gender + party, data = congress_data_for_anova)
passPrcnt_lm
#get intervals
passPrcnt_intervals <-
reg_intervals(passPrcnt ~ numberTerms + age + gender + party, data = congress_data_for_anova, times = 500)
passPrcnt_intervals
#plot estimates
passPrcnt_intervals %>%
ggplot(aes(.estimate, term)) +
geom_vline(xintercept = 0, size = 1.5, lty = 2, color = "gray50") +
geom_errorbar(size = 1.4, alpha = 0.7,
aes(xmin = .lower, xmax = .upper)) +
geom_point(size = 3)
#|echo: false
#|message: false
#|warning: false
#load libraries
library(tidyverse)
library(ggthemes)
library(patchwork)
library(ggplot2)
library(ISLR2)
library(rsample)
library(tidymodels)
#load data
source("data/clean_congress_data.R")
#|echo: false
#|message: false
#|warning: false
#load libraries
library(tidyverse)
library(ggthemes)
library(patchwork)
library(ggplot2)
library(ISLR2)
library(rsample)
library(tidymodels)
#load data
source("R/clean_congress_data.R")
#plot estimates
passPrcnt_intervals %>%
ggplot(aes(.estimate, term)) +
geom_vline(xintercept = 0, size = 1.5, lty = 2, color = "gray50") +
geom_errorbar(size = 1.4, alpha = 0.7,
aes(xmin = .lower, xmax = .upper)) +
geom_point(size = 3)
source("~/GitHub/congress_data_package/R/bootstrap.R")
source("~/GitHub/congress_data_package/R/bootstrap.R")
#plot estimates
passPrcnt_intervals %>%
ggplot(aes(.estimate, term)) +
geom_vline(xintercept = 0, size = 1.5, lty = 2, color = "gray50") +
geom_errorbar(size = 1.4, alpha = 0.7,
aes(xmin = .lower, xmax = .upper)) +
geom_point(size = 3)
#plot estimates
passPrcnt_intervals %>%
ggplot(aes(.estimate, term)) +
geom_vline(xintercept = 0, size = 1.5, lty = 2, color = "gray50") +
geom_errorbar(size = 1.4, alpha = 0.7,
aes(xmin = .lower, xmax = .upper)) +
geom_point(size = 3)
#plot estimates
passPrcnt_intervals %>%
ggplot(aes(.estimate, term)) +
geom_vline(xintercept = 0, size = 1.5, lty = 2, color = "gray50") +
geom_errorbar(size = 1.4, alpha = 0.7,
aes(xmin = .lower, xmax = .upper)) +
geom_point(size = 3)
passPrcnt_intervals %>%
ggplot(aes(.estimate, term)) +
geom_vline(xintercept = 0, size = 1.5, lty = 2, color = "gray50") +
geom_errorbar(size = 1.4, alpha = 0.7,
aes(xmin = .lower, xmax = .upper)) +
geom_point(size = 3)
#plot estimates
numSpon_intervals %>%
ggplot(aes(.estimate, term)) +
geom_vline(xintercept = 0, size = 1.5, lty = 2, color = "gray50") +
geom_errorbar(size = 1.4, alpha = 0.7,
aes(xmin = .lower, xmax = .upper)) +
geom_point(size = 3)
#| echo: false
#find the RMSE
numspon_preds %>%
rmse(truth = numSpon, estimate = .pred)
#| echo: false
#| message: false
#| warning: false
#load libraries
library(tidyverse)
library(ggthemes)
library(patchwork)
library(ggplot2)
library(ISLR2)
library(rsample)
library(tidymodels)
#load data
source("R/clean_congress_data.R")
set.seed(123)
#| echo: false
#find the RMSE
numspon_preds %>%
rmse(truth = numSpon, estimate = .pred)
#compare predictions to actual
numspon_preds %>%
select(numSpon, .pred)%>%
glimpse()
#| echo: false
#find the RMSE
numspon_preds %>%
rmse(truth = numSpon, estimate = .pred)
#| echo: false
#find the RMSE
numspon_preds %>%
rmse(truth = numSpon, estimate = .pred)
#compare predictions to actual
numspon_preds %>%
select(numSpon, .pred)%>%
glimpse()
#| echo: false
#find the RMSE
numspon_preds %>%
rmse(truth = numSpon, estimate = .pred)
library(kableExtra)
#| echo: false
#find the RMSE
numspon_preds %>%
rmse(truth = numSpon, estimate = .pred)%>%
kbl()
#compare predictions to actual
numspon_preds %>%
select(numSpon, .pred)%>%
kbl(caption = "# of Bills Sponsored: Predictions vs actual")
#| echo: false
#find the RMSE
numspon_preds %>%
rmse(truth = numSpon, estimate = .pred)%>%
kbl()
#compare predictions to actual
numspon_preds %>%
select(numSpon, .pred)%>%
top_n(10)%>%
kbl(caption = "# of Bills Sponsored: Predictions vs actual")
#compare predictions to actual
numspon_preds %>%
select(numSpon, .pred)%>%
top_n(10)%>%
kbl(caption = "# of Bills Sponsored: Predictions vs actual")
#| echo: false
#| message: false
#find the RMSE
numspon_preds %>%
rmse(truth = numSpon, estimate = .pred)%>%
select(.metric, .estimate)
kbl()
#| echo: false
#| message: false
#find the RMSE
numspon_preds %>%
rmse(truth = numSpon, estimate = .pred)%>%
select(.metric, .estimate) %>%
kbl()
#compare predictions to actual
numspon_preds %>%
select(numSpon, .pred)%>%
top_n(10)%>%
kbl(caption = "# of Bills Sponsored: Predictions vs Actual")
#| echo: false
#| message: false
#-----passPrcnt-----
#model formula
passPrcnt_lm <-
lm(passPrcnt ~ numberTerms + age + gender + party, data = congress_data_for_anova)
#get intervals
passPrcnt_intervals <-
reg_intervals(passPrcnt ~ numberTerms + age + gender + party, data = congress_data_for_anova, times = 500)
#| echo: false
#| message: false
#| warning: false
#load libraries
library(tidyverse)
library(ggthemes)
library(patchwork)
library(ggplot2)
library(ISLR2)
library(rsample)
library(tidymodels)
library(kableExtra)
#load data
source("R/clean_congress_data.R")
set.seed(123)
#| echo: false
#| message: false
#-----passPrcnt-----
#model formula
passPrcnt_lm <-
lm(passPrcnt ~ numberTerms + age + gender + party, data = congress_data_for_anova)
#get intervals
passPrcnt_intervals <-
reg_intervals(passPrcnt ~ numberTerms + age + gender + party, data = congress_data_for_anova, times = 500)
#plot estimates
passPrcnt_intervals %>%
ggplot(aes(.estimate, term)) +
geom_vline(xintercept = 0, linewidth = 1.5, lty = 2, color = "gray50") +
geom_errorbar(size = 1.4, alpha = 0.7,
aes(xmin = .lower, xmax = .upper)) +
geom_point(size = 3)
#| echo: false
#| message: false
#-----passPrcnt-----
#model formula
passPrcnt_lm <-
lm(passPrcnt ~ numberTerms + age + gender + party, data = congress_data_for_anova)
#get intervals
passPrcnt_intervals <-
reg_intervals(passPrcnt ~ numberTerms + age + gender + party, data = congress_data_for_anova, times = 100)
#plot estimates
passPrcnt_intervals %>%
ggplot(aes(.estimate, term)) +
geom_vline(xintercept = 0, linewidth = 1.5, lty = 2, color = "gray50") +
geom_errorbar(linewidth = 1.4, alpha = 0.7,
aes(xmin = .lower, xmax = .upper)) +
geom_point(size = 3)
#| echo: false
#| message: false
#| warning: false
# clean up data for ANOVA
congress_data_for_anova <-congress_data %>%
filter(party!="Independent")
#-----numSpon-----
#model formula
numSpon_lm <-
lm(numSpon ~ numberTerms + age + gender + party, data = congress_data_for_anova)
#get intervals
numSpon_intervals <-
reg_intervals(numSpon ~ numberTerms + age + gender + party, data = congress_data_for_anova, times = 100)
#plot estimates
numSpon_intervals %>%
ggplot(aes(.estimate, term)) +
geom_vline(xintercept = 0, linewidth = 1.5, lty = 2, color = "gray50") +
geom_errorbar(size = 1.4, alpha = 0.7,
aes(xmin = .lower, xmax = .upper)) +
geom_point(size = 3)
## Data Collection
congress_data <- read_csv("../data/congress_data.csv")
congress_data %>%
head(5) %>%
kable()
#| echo: false
#| warning: false
congress_data %>%
ggplot(aes(x=congNum, fill=party)) +
geom_bar() +
scale_fill_manual(values=c("#5156e0", "#00aa00", "#e05151")) +
labs(
title="Party Distribution of Congress Over Time",
x="Congress Number",
y="Number of Seats",
fill="Party"
)
#| echo: false
#| warning: false
congress_data %>%
ggplot(aes(x=congNum, fill=gender)) +
geom_bar(color="black") +
scale_fill_manual(values=c("#e05151", "#5156e0")) +
labs(
title="Gender Distribution of Congress",
x="Congress Number",
y="Number of Seats",
fill="Gender"
)
